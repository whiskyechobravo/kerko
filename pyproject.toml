[project]
name = "Kerko"
description = "A Flask blueprint that provides a faceted search interface for bibliographies based on Zotero."
authors = [
    {name = "David Lesieur", email="kerko@whiskyechobravo.com"},
]
readme = "README.md"
keywords = ["academia", "bibliography", "bibliographies", "flask", "search", "zotero"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Flask",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Database :: Front-Ends",
    "Topic :: Education",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = ["version"]
requires-python = ">= 3.9"
dependencies = [
    "Babel >= 2.14.0",
    "Bootstrap-Flask >= 2.0.1",
    "click >= 8.0.1",
    "dpath >= 2.1.0",
    "Flask >= 2.2.5",
    "Flask-Babel >= 3.0.1",
    "Flask-WTF >= 0.14.2",
    "Jinja2 >= 3.0.1",
    "pycountry >= 24",
    "pydantic >= 1.10.7, < 2.0",
    "python-dotenv >= 0.21.1",
    "pytz",  # Babel does not require it (since 2.12.0), but will use it if present.
    "Pyzotero >= 1.4.26, <= 1.5.20",
    "tomli >= 2.0.1",
    "tomli-w >= 1.0.0",
    "w3lib >= 1.22.0",
    "Werkzeug >= 2.0.1",
    "Whoosh >= 2.7.4",
    "wrapt >= 1.10.0",
    "WTForms >= 3.0.0",
]

[project.optional-dependencies]
tests = [
    "coverage >= 6.1.2, < 8",
    "elementpath >= 5, < 6",
    "lxml >= 5.0.2, < 6",
    "responses >= 0.17.0",
    "tox >= 3.8, < 5",
]
dev = [
    "mypy >= 0.910",
    "pip-tools >= 5.5.0",
    "pre-commit >= 3.5.0",
    "rope",
    "ruff >= 0.1.3",
]
docs = [
    "mkdocs-material >= 9.4, < 10",
    "mike >= 1.1.2, < 3",
]

[project.urls]
Documentation = "https://whiskyechobravo.github.io/kerko/"
Code = "https://github.com/whiskyechobravo/kerko"
Changes = "https://github.com/whiskyechobravo/kerko/blob/main/CHANGELOG.md"
Issues = "https://github.com/whiskyechobravo/kerko/issues"

[project.entry-points."flask.commands"]
kerko = "kerko.cli:cli"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build]
artifacts = [
    "*.mo",
]
exclude = [
    ".git-blame-ignore-revs",
]

[tool.hatch.build.hooks.custom]
dependencies = [
    "Babel >= 2.14.0",
]

[tool.hatch.version]
source = "vcs"

[tool.coverage.run]
branch = true
source = ["kerko"]

[tool.coverage.paths]
source = [
    "src",
    ".tox/*/site-packages",
]

[tool.mypy]
python_version = "3.9"
plugins = ["pydantic.mypy"]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "F",    # Pyflakes
    "W",    # pycodestyle
    "E",    # pycodestyle
    "I",    # isort
    "N",    # pep8-naming
    "D",    # pydocstyle
    "UP",   # pyupgrade
    "YTT",  # flake8-2020
    "BLE",  # flake8-blind-except
    "A",    # flake8-builtins
    "COM",  # flake8-commas
    "T10",  # flake8-debugger
    "EM",   # flake8-errmsg
    "EXE",  # flake8-executable
    "INT",  # flake8-gettext
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "Q",    # flake8-quotes
    "RSE",  # flake8-raise
    "SLF",  # flake8-self
    "SLOT", # flake8-slots
    "TID",  # flake8-tidy-imports
    "TC",   # flake8-type-checking
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "PGH",  # pygrep-hooks
    "PL",   # Pylint
    "FLY",  # flynt
    # TODO: "TRY",  # tryceratops
    # TODO: "PERF", # Perflint
    # TODO: "B",    # flake8-bugbear
    # TODO: "C4",   # flake8-comprehensions
    # TODO: "G",    # flake8-logging-format
    # TODO: "PYI",  # flake8-pyi
    # TODO: "RET",  # flake8-return
    # TODO: "SIM",  # flake8-simplify
    # TODO: "ERA",  # eradicate
    # TODO: "RUF",  # Ruff-specific rules
]
ignore = [
    "D100",    # Missing docstring in public module.
    "D101",    # Missing docstring in public class.
    "D102",    # Missing docstring in public method.
    "D103",    # Missing docstring in public function.
    "D105",    # Missing docstring in magic method.
    "D106",    # Missing docstring in public nested class.
    "D107",    # Missing docstring in __init__.
    "D200",    # One-line docstring should fit on one line.
    "D202",    # No blank lines allowed after function docstring.
    "D203",    # 1 blank line required before class docstring.
    "D205",    # 1 blank line required between summary line and description.
    "D212",    # Multi-line docstring summary should start at the first line.
    "D213",    # Multi-line docstring summary should start at the second line.
    "COM812",  # Missing trailing comma.
    "PLR0912", # Too many branches.
    "PLR0913", # Too many arguments in function definition.
    "PLR0915", # Too many statements.
]

[tool.ruff.lint.isort]
known-first-party = ["kerko"]
